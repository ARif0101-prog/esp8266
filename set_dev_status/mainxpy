import mysql.connector
from kivy.uix.boxlayout import BoxLayout
from kivy.app import App
from kivy.core.window import Window
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.lang import Builder
import time
Window.clearcolor = (1, 1, 1, 1)


class ScreenManagement(ScreenManager):
    pass



class Myrootwidget(Screen):
    def btn_act(self):
        global dphst, dpusr, dppwd,dpdb
        dphst=self.ids.txthst.text
        dpusr=self.ids.txtusr.text
        dppwd=self.ids.txtpwd.text
        dpdb=self.ids.txtdb.text

        try:
            global db_connection
            db_connection = mysql.connector.connect(host=dphst, user=dpusr, passwd=dppwd,database=dpdb )
            if (db_connection.is_connected() == True):
                self.manager.current="tambah"

            return print(db_connection.is_connected())


        except:
            return print('error bro')


    def close_application(self):
        App.get_running_app().stop()
        Window.close()
    def btn(self):
        self.manager.get_screen("second").ids.btn2.text="changed"
class SecondWindow (Screen):
    def scn_btn(self):
        return print(self.ids.scn_id.text)

class AddDb(Screen):
    
    def off_btn(self):
        tbl=self.manager.get_screen("main").ids.txttb.text
        db_cursor = db_connection.cursor()
        db_cursor.execute("UPDATE `" + tbl +"` SET device_status = 0 WHERE id = 1")
        db_connection.commit() 
    def on_btn(self):
        tbl=self.manager.get_screen("main").ids.txttb.text

        db_cursor = db_connection.cursor()
        db_cursor.execute("UPDATE `" + tbl +"` SET device_status = 1 WHERE id = 1")
  
        db_connection.commit() 
    def tmb_btn(self):
        db_cursor = db_connection.cursor()
 
        db= self.ids.dbname.text

    def hps_btn(self):
        db_cursor = db_connection.cursor()
        db= self.ids.dbname.text
        db_cursor.execute("DROP DATABASE `" + db+"`")

class Db_manipulate(Screen):
    pass

presentation = Builder.load_file("mine.kv")    
        

class MyApp(App):
    title = 'created by arif'
    def build(self):
        return presentation

if __name__=="__main__":
    MyApp().run()